<?php
/**
 * @file
 * Code for the ASU Brand for Open Scholar integration.
 */

include_once 'asu_brand_os.features.inc';

/**
 * @file asu_brand_os.module
 *
 */

define('ASU_BRAND_OS_SITE_MENU_NAME_DEFAULT', 'primary-menu');

/*****************************************************************************
 HOOKS
******************************************************************************/

function asu_brand_os_init() {
    $menu_array = asu_brand_os_get_site_menu_array();

    $site_name = asu_brand_get_site_name();

    if ($vsite = vsite_get_vsite()) {
      $vsite_title = variable_get('site_name', '');
      if (isset($vsite->group->title)) {
        $vsite_title = $vsite->group->title;
      }
      $site_name = $vsite_title;
    }
  
    $js = 'window.ASUHeader = window.ASUHeader || {};';
    $js .= 'ASUHeader.site_menu = ASUHeader.site_menu || {};';
    $js .= 'ASUHeader.site_menu.json = \'' . json_encode($menu_array, JSON_HEX_APOS) . '\';';
    $js .= 'ASUHeader.site_menu.site_name = ' . json_encode($site_name, JSON_HEX_APOS) . ';';

    drupal_add_js($js, array('type' => 'inline', 'scope' => 'header', 'group' => JS_THEME, 'weight' => -10));
}

/**
 * Implements hook_preprocess_HOOK()
 * @param $variables
 *
 * This allows presetting the site title value for the new header to prevent a lag
 * between loading the page and the site title after the page loads.
 */
function asu_brand_os_preprocess_html(&$variables) {
  $site_name = asu_brand_get_site_name();

  if ($vsite = vsite_get_vsite()) {
    $vsite_title = variable_get('site_name', '');
    if (isset($vsite->group->title)) {
      $vsite_title = $vsite->group->title;
    }
    if (isset($vsite->group->type)) {
      $vsite_type = $vsite->group->type;
    }
    $site_name = $vsite_title;
  }

  $value = 'ASUHeader.site_title = {title: "' . $site_name . '"};';

  if(isset($vsite_type) && ($vsite_type == "personal" || $vsite_type == "faculty" || $vsite_type == "professional")) {
    $value = 'ASUHeader.site_title = {title: "' . $site_name . '", parent_org: "Faculty"};';
  }

  $script = array(
    '#tag' => 'script',
    '#attributes' => array('type' => 'text/javascript'),
    '#value' => $value
  );
  /* - Uncomment this when 4.6 is in production
  drupal_add_html_head($script, 'script');
  */
  drupal_add_html_head($script, 'script');
}

/**
 * Implements hook_menu().
 *
 * Admin menu for setting site api key and mailing list.
 * Ajax url for processing sub requests.  (using ajax so I can have one unified sub function).
 */
function asu_brand_os_menu() {

  $items ['admin/config/openscholar/asu_brand_os'] = array(
    'title' => t( 'ASU Brand for Open Scholar' ),
  	'page callback' => 'drupal_get_form',
  	'page arguments' => array('asu_brand_os_admin' ),
  	'file' => 'asu_brand_os.admin.inc',
  	'access arguments' => array('access administration pages' ),
  );
// TODO don't need a new page, need to output content in the box only...
  //$items['asu_brand_os/%ctools_js/subscribe/%'] = array(
  //  'title' => t('Subscribe to mailing list'),
  //  'page callback' => 'asu_brand_os_subscribe_page',
  //  'page arguments' => array(1,3),
  //  'type' => MENU_NORMAL_ITEM,
  //  'access callback' => TRUE,
  //);

  return $items;
}

/**
 * Implements of hook_boxes_plugins().
 */
function asu_brand_os_boxes_plugins(){

  $info = array();
  $path = drupal_get_path('module', 'asu_brand_os') . '/plugins';
  //$css = drupal_get_path('module', 'asu_brand_os') . '/theme/os-mailchimp.css';

  // Header
  $info['os_boxes_asu_brand_header'] = array(
    'title' => 'ASU Header',
    'description' => 'ASU Brand Header',
    //'css' => $css,
    'tags' => array(
      'ASU'
    ),
    'handler' => array(
      'class' => 'os_boxes_asu_brand_header',
      'file' => 'asu_brand_os_box.header.inc',
      'path' => $path,
      'parent' => 'os_boxes_default'
    )
  );

  // Footer
  $info['os_boxes_asu_brand_footer'] = array(
    'title' => 'ASU Footer',
    'description' => 'ASU Brand Footer',
    //'css' => $css,
    'tags' => array(
      'ASU'
    ),
    'handler' => array(
      'class' => 'os_boxes_asu_brand_footer',
      'file' => 'asu_brand_os_box.footer.inc',
      'path' => $path,
      'parent' => 'os_boxes_default'
    )
  );

  return $info;
}
/**
 * Module implements hook_init().
 *
 */
//function asu_brand_os_init() {

// Need this loaded on every page due to including in theme.
//module_load_include('inc', 'asu_brand', $name = 'asu_brand.block');

//dpm(asu_brand_get_block_header());
//dpm(asu_brand_get_block_footer());

//}

function asu_brand_os_get_site_menu_array() {
  $menu_tree = vsite_menu_os_menu_tree(variable_get('asu_brand_os_sitemenu_name', ASU_BRAND_OS_SITE_MENU_NAME_DEFAULT));
  $menu_array = array();
  $i=0;
  if(!empty($menu_tree)){
    foreach ($menu_tree as $item) {
      if (isset($item['link']) && $item['link']['access'] && !$item['link']['hidden']) {
        if ($menu_item = asu_brand_get_menu_item($item['link']['title'], $item['link']['link_path'], $item['link']['options'])) {
          $menu_array[$i] = array_map('trim', $menu_item);
        } else {
          $i--;
        }
        // Render child items.
        if (asu_brand_menuitem_has_active_children($item)) {
          $j=0;
          foreach ($item['below'] as $child) {
            if (isset($child['link']) && !$child['link']['hidden']) {
              if ($menu_item = asu_brand_get_menu_item($child['link']['title'], $child['link']['link_path'], $child['link']['options'])) {
                $menu_array[$i]['children'][$j] = array_map('trim', $menu_item);
              } else {
                $j--;
              }
              // Render grandchild items.
              if (asu_brand_menuitem_has_active_children($child)) {
                $k=0;
                foreach ($child['below'] as $grandchild) {
                  if (isset($grandchild['link']) && !$grandchild['link']['hidden']) {
                    if ($menu_item = asu_brand_get_menu_item($grandchild['link']['title'], $grandchild['link']['link_path'], $grandchild['link']['options'])) {
                      $menu_array[$i]['children'][$j]['children'][$k] = array_map('trim', $menu_item);
                    } else {
                      $k--;
                    }
                    $k++;
                  }
                }
              }
              $j++;
            }
          }
        }
        $i++;
      }
    }
  }
  return $menu_array;
}

/*****************************************************************************
 CALLBACKS
******************************************************************************/

/*****************************************************************************
 FORMS
******************************************************************************/

/*****************************************************************************
 INTERNAL
******************************************************************************/


/*****************************************************************************
 THEME
******************************************************************************/

/*****************************************************************************
 API
******************************************************************************/

/*****************************************************************************
 DEVELOPER NOTES
******************************************************************************/

